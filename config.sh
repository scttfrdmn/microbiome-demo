#!/bin/bash
# config.sh
# Configuration file for the Microbiome Demo
# This file is automatically generated by setup.sh

# Core configuration
BUCKET_NAME=microbiome-demo-bucket
REGION=us-east-1
STACK_NAME=microbiome-demo
AWS_PROFILE=""  # AWS CLI profile to use, empty for default

# Infrastructure configuration
COMPUTE_ENV_CPU=microbiome-demo-cpu-env
COMPUTE_ENV_GPU=microbiome-demo-gpu-env
JOB_QUEUE_CPU=microbiome-demo-queue
JOB_QUEUE_GPU=microbiome-demo-gpu-queue
JOB_DEFINITION=microbiome-demo-job
GPU_JOB_DEFINITION=microbiome-demo-gpu-job

# Data configuration
SAMPLE_COUNT=100
REFERENCE_PATH="s3://$BUCKET_NAME/reference"
INPUT_PATH="s3://$BUCKET_NAME/input"
OUTPUT_PATH="s3://$BUCKET_NAME/results"
REPORT_PATH="s3://$BUCKET_NAME/reports"

# Container configuration
CONTAINER_REPO_CPU=public.ecr.aws/lts/microbiome-tools
CONTAINER_TAG_CPU=latest
CONTAINER_REPO_GPU=public.ecr.aws/lts/kraken2-gpu
CONTAINER_TAG_GPU=latest

# Demo parameters
DEMO_DURATION_MINUTES=15
TEST_SAMPLE_COUNT=5
ESTIMATED_COST=38.50
ON_PREMISES_COST=1800.00
STANDARD_CLOUD_COST=120.00

# Function to format cost
format_cost() {
  printf "\$%.2f" $1
}

# Function to get stack outputs
get_stack_output() {
  local output_key=$1
  aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --query "Stacks[0].Outputs[?OutputKey=='$output_key'].OutputValue" \
    --output text 2>/dev/null || echo "NOT_FOUND"
}

# Function to log messages with timestamps
log_message() {
  echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

# Check if AWS CLI is configured
check_aws_cli() {
  if ! aws sts get-caller-identity &>/dev/null; then
    echo "ERROR: AWS CLI not configured. Please run 'aws configure' first."
    exit 1
  fi
}

# Check if AWS resources exist
check_resources() {
  if ! aws cloudformation describe-stacks --stack-name $STACK_NAME &>/dev/null; then
    echo "ERROR: Stack $STACK_NAME not found. Please create the stack first."
    exit 1
  fi
  
  if ! aws s3 ls "s3://$BUCKET_NAME" &>/dev/null; then
    echo "ERROR: S3 bucket $BUCKET_NAME not found. Please run setup.sh first."
    exit 1
  fi
}
